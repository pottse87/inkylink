[
  {
    "File": "lib\\db.js",
    "Line": 7,
    "Text": "const { Pool } = require(\"pg\");"
  },
  {
    "File": "node_modules\\pg-connection-string\\index.d.ts",
    "Line": 1,
    "Text": "import { ClientConfig } from 'pg'"
  },
  {
    "File": "node_modules\\pg-connection-string\\README.md",
    "Line": 40,
    "Text": "import { ClientConfig } from 'pg';"
  },
  {
    "File": "node_modules\\pg-connection-string\\README.md",
    "Line": 49,
    "Text": "import { ClientConfig } from 'pg';"
  },
  {
    "File": "node_modules\\pg-pool\\index.js",
    "Line": 95,
    "Text": "this.Client = this.options.Client || Client || require('pg').Client"
  },
  {
    "File": "node_modules\\pg-pool\\README.md",
    "Line": 42,
    "Text": "const NativeClient = require('pg').native.Client"
  },
  {
    "File": "node_modules\\pg-types\\README.md",
    "Line": 10,
    "Text": "var types = require('pg').types"
  },
  {
    "File": "node_modules\\pg-types\\README.md",
    "Line": 18,
    "Text": "var types = require('pg').types"
  },
  {
    "File": "node_modules\\pg-types\\README.md",
    "Line": 29,
    "Text": "var types = require('pg').types"
  },
  {
    "File": "pages\\api\\save-cloud-cart.js",
    "Line": 5,
    "Text": "const { Pool } = require(\"pg\");"
  },
  {
    "File": "pages\\api\\webhook.js",
    "Line": 3,
    "Text": "import pkg from \"pg\";"
  },
  {
    "File": "playwright_tmp\\playwright-transform-cache\\1c\\inkylinkspec_1c609275a2b298a965da1ced6d6159789b6d1e1c.js",
    "Line": 10,
    "Text": "} = require('pg');"
  },
  {
    "File": "playwright_tmp\\playwright-transform-cache\\1c\\inkylinkspec_1c609275a2b298a965da1ced6d6159789b6d1e1c.map",
    "Line": 1,
    "Text": "{\"version\":3,\"names\":[\"test\",\"expect\",\"require\",\"fs\",\"Client\",\"page\",\"baseUrl\",\"goto\",\"locator\",\"toContainText\",\"first\",\"click\",\"toHaveURL\",\"inputs\",\"count\",\"i\",\"nth\",\"fill\",\"ordersPath\",\"existsSync\",\"Error\",\"files\",\"readdirSync\",\"length\",\"console\",\"log\",\"latestOrderPath\",\"orderData\",\"JSON\",\"parse\",\"readFileSync\",\"idsWithHyphens\",\"items\",\"filter\",\"item\",\"id\",\"includes\",\"map\",\"join\",\"client\",\"host\",\"process\",\"env\",\"PGHOST\",\"port\",\"PGPORT\",\"database\",\"PGDATABASE\",\"user\",\"PGUSER\",\"password\",\"PGPASSWORD\",\"connect\",\"res\",\"query\",\"rows\",\"err\",\"warn\",\"message\",\"end\"],\"sources\":[\"inkylink.spec.js\"],\"sourcesContent\":[\"const { test, expect } = require('@playwright/test');\\r\\nconst fs = require('fs');\\r\\nconst { Client } = require('pg');\\r\\n\\r\\ntest('Inkylink full pipeline + DB check', async ({ page }) => {\\r\\n  const baseUrl = 'http://localhost:3000';\\r\\n\\r\\n  // 1. Go to pricing page\\r\\n  await page.goto(`${baseUrl}/pricing`);\\r\\n  await expect(page.locator('h1')).toContainText('Inkylink');\\r\\n\\r\\n  // 2. Click first \\\"Order Now\\\"\\r\\n  await page.locator('text=Order Now').first().click();\\r\\n\\r\\n  // 3. Confirmation page\\r\\n  await expect(page).toHaveURL(/confirmation/);\\r\\n\\r\\n  // 4. Continue to form\\r\\n  await page.locator('text=Continue to Intake Form').click();\\r\\n\\r\\n  // 5. Fill all inputs\\r\\n  const inputs = page.locator('input[type=\\\"text\\\"]');\\r\\n  const count = await inputs.count();\\r\\n  for (let i = 0; i < count; i++) {\\r\\n    await inputs.nth(i).fill(`Sample answer ${i + 1}`);\\r\\n  }\\r\\n\\r\\n  // 6. Submit form\\r\\n  await page.locator('text=Submit').click();\\r\\n\\r\\n  // 7. Thank you page\\r\\n  await expect(page).toHaveURL(/thankyou/);\\r\\n\\r\\n  // 8. Verify local orders folder\\r\\n  const ordersPath = './orders';\\r\\n  if (!fs.existsSync(ordersPath)) throw new Error('❌ Orders folder not found');\\r\\n  const files = fs.readdirSync(ordersPath);\\r\\n  if (!files.length) throw new Error('❌ No order files found in orders folder');\\r\\n  console.log('✅ Order saved locally:', files[files.length - 1]);\\r\\n\\r\\n  // 9. Verify IDs have no hyphens\\r\\n  const latestOrderPath = `${ordersPath}/${files[files.length - 1]}`;\\r\\n  const orderData = JSON.parse(fs.readFileSync(latestOrderPath, 'utf8'));\\r\\n  const idsWithHyphens = orderData.items.filter(item => item.id.includes('-'));\\r\\n  if (idsWithHyphens.length > 0) {\\r\\n    throw new Error(`❌ Found IDs with hyphens: ${idsWithHyphens.map(i => i.id).join(', ')}`);\\r\\n  }\\r\\n  console.log('✅ All IDs have spaces instead of hyphens');\\r\\n\\r\\n  // 10. PostgreSQL DB verification\\r\\n  const client = new Client({\\r\\n    host: process.env.PGHOST,\\r\\n    port: process.env.PGPORT,\\r\\n    database: process.env.PGDATABASE,\\r\\n    user: process.env.PGUSER,\\r\\n    password: process.env.PGPASSWORD,\\r\\n  });\\r\\n\\r\\n  try {\\r\\n    await client.connect();\\r\\n    const res = await client.query('SELECT order_id, submitted_at FROM orders ORDER BY submitted_at DESC LIMIT 1');\\r\\n    if (res.rows.length === 0) {\\r\\n      throw new Error('❌ No orders found in PostgreSQL');\\r\\n    } else {\\r\\n      console.log('✅ Latest order in PostgreSQL:', res.rows[0]);\\r\\n    }\\r\\n  } catch (err) {\\r\\n    console.warn('⚠️ PostgreSQL check failed:', err.message);\\r\\n  } finally {\\r\\n    await client.end();\\r\\n  }\\r\\n});\\r\\n\"],\"mappings\":\"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\",\"ignoreList\":[]}"
  },
  {
    "File": "playwright_tmp\\playwright-transform-cache\\84\\inkylinkspec_84356c8e2d4c1734915e46f20a746989077968cb.js",
    "Line": 10,
    "Text": "} = require('pg');"
  },
  {
    "File": "playwright_tmp\\playwright-transform-cache\\84\\inkylinkspec_84356c8e2d4c1734915e46f20a746989077968cb.map",
    "Line": 1,
    "Text": "{\"version\":3,\"names\":[\"test\",\"expect\",\"require\",\"fs\",\"Client\",\"page\",\"baseUrl\",\"goto\",\"locator\",\"toContainText\",\"first\",\"click\",\"toHaveURL\",\"inputs\",\"count\",\"i\",\"nth\",\"fill\",\"ordersPath\",\"existsSync\",\"Error\",\"files\",\"readdirSync\",\"length\",\"console\",\"log\",\"latestOrderPath\",\"orderData\",\"JSON\",\"parse\",\"readFileSync\",\"idsWithHyphens\",\"Array\",\"isArray\",\"items\",\"filter\",\"item\",\"id\",\"includes\",\"warn\",\"map\",\"join\",\"client\",\"host\",\"process\",\"env\",\"PGHOST\",\"port\",\"PGPORT\",\"database\",\"PGDATABASE\",\"user\",\"PGUSER\",\"password\",\"PGPASSWORD\",\"connect\",\"res\",\"query\",\"rows\",\"err\",\"message\",\"end\"],\"sources\":[\"inkylink.spec.js\"],\"sourcesContent\":[\"const { test, expect } = require('@playwright/test');\\r\\nconst fs = require('fs');\\r\\nconst { Client } = require('pg');\\r\\n\\r\\ntest('Inkylink full pipeline + DB check', async ({ page }) => {\\r\\n  const baseUrl = 'http://localhost:3000';\\r\\n\\r\\n  // 1. Go to pricing page\\r\\n  await page.goto(`${baseUrl}/pricing`);\\r\\n  await expect(page.locator('h1')).toContainText('Inkylink');\\r\\n\\r\\n  // 2. Click first \\\"Order Now\\\"\\r\\n  await page.locator('text=Order Now').first().click();\\r\\n\\r\\n  // 3. Confirmation page\\r\\n  await expect(page).toHaveURL(/confirmation/);\\r\\n\\r\\n  // 4. Continue to form\\r\\n  await page.locator('text=Continue to Intake Form').click();\\r\\n\\r\\n  // 5. Fill all inputs\\r\\n  const inputs = page.locator('input[type=\\\"text\\\"]');\\r\\n  const count = await inputs.count();\\r\\n  for (let i = 0; i < count; i++) {\\r\\n    await inputs.nth(i).fill(`Sample answer ${i + 1}`);\\r\\n  }\\r\\n\\r\\n  // 6. Submit form\\r\\n  await page.locator('text=Submit').click();\\r\\n\\r\\n  // 7. Thank you page\\r\\n  await expect(page).toHaveURL(/thankyou/);\\r\\n\\r\\n  // 8. Verify local orders folder\\r\\n  const ordersPath = './orders';\\r\\n  if (!fs.existsSync(ordersPath)) throw new Error('❌ Orders folder not found');\\r\\n  const files = fs.readdirSync(ordersPath);\\r\\n  if (!files.length) throw new Error('❌ No order files found in orders folder');\\r\\n  console.log('✅ Order saved locally:', files[files.length - 1]);\\r\\n\\r\\n  // 9. Verify IDs have no hyphens\\r\\n  const latestOrderPath = `${ordersPath}/${files[files.length - 1]}`;\\r\\n  const orderData = JSON.parse(fs.readFileSync(latestOrderPath, 'utf8'));\\r\\n  const idsWithHyphens = Array.isArray(orderData.items) ? orderData.items.filter(item => item.id.includes(\\\"-\\\")) : [];\\nif (!Array.isArray(orderData.items)) {\\n  console.warn(\\\"?? No items array found in latest order file.\\\");\\n}\\r\\n  if (idsWithHyphens.length > 0) {\\r\\n    throw new Error(`❌ Found IDs with hyphens: ${idsWithHyphens.map(i => i.id).join(', ')}`);\\r\\n  }\\r\\n  console.log('✅ All IDs have spaces instead of hyphens');\\r\\n\\r\\n  // 10. PostgreSQL DB verification\\r\\n  const client = new Client({\\r\\n    host: process.env.PGHOST,\\r\\n    port: process.env.PGPORT,\\r\\n    database: process.env.PGDATABASE,\\r\\n    user: process.env.PGUSER,\\r\\n    password: process.env.PGPASSWORD,\\r\\n  });\\r\\n\\r\\n  try {\\r\\n    await client.connect();\\r\\n    const res = await client.query('SELECT order_id, submitted_at FROM orders ORDER BY submitted_at DESC LIMIT 1');\\r\\n    if (res.rows.length === 0) {\\r\\n      throw new Error('❌ No orders found in PostgreSQL');\\r\\n    } else {\\r\\n      console.log('✅ Latest order in PostgreSQL:', res.rows[0]);\\r\\n    }\\r\\n  } catch (err) {\\r\\n    console.warn('⚠️ PostgreSQL check failed:', err.message);\\r\\n  } finally {\\r\\n    await client.end();\\r\\n  }\\r\\n});\\r\\n\"],\"mappings\":\"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\",\"ignoreList\":[]}"
  },
  {
    "File": "playwright_tmp\\playwright-transform-cache\\84\\inkylinkspec_8488f0e59198db31353c46f9a084a721f7afd4a2.js",
    "Line": 10,
    "Text": "} = require('pg');"
  },
  {
    "File": "playwright_tmp\\playwright-transform-cache\\84\\inkylinkspec_8488f0e59198db31353c46f9a084a721f7afd4a2.map",
    "Line": 1,
    "Text": "{\"version\":3,\"names\":[\"test\",\"expect\",\"require\",\"fs\",\"Client\",\"page\",\"baseUrl\",\"testEmail\",\"Date\",\"now\",\"goto\",\"toHaveTitle\",\"locator\",\"first\",\"click\",\"toHaveURL\",\"inputs\",\"count\",\"i\",\"nth\",\"fill\",\"ordersPath\",\"existsSync\",\"Error\",\"files\",\"readdirSync\",\"length\",\"console\",\"log\"],\"sources\":[\"inkylink.spec.js\"],\"sourcesContent\":[\"const { test, expect } = require('@playwright/test');\\r\\nconst fs = require('fs');\\r\\nconst { Client } = require('pg');\\r\\n\\r\\ntest('Inkylink full pipeline', async ({ page }) => {\\r\\n  const baseUrl = 'http://localhost:3000';\\r\\n  const testEmail = 'test_' + Date.now() + '@example.com';\\r\\n\\r\\n  // 1. Go to pricing page\\r\\n  await page.goto(`${baseUrl}/pricing`);\\r\\n  await expect(page).toHaveTitle(/Inkylink/);\\r\\n\\r\\n  // 2. Click first \\\"Order Now\\\"\\r\\n  await page.locator('text=Order Now').first().click();\\r\\n\\r\\n  // 3. Confirmation page\\r\\n  await expect(page).toHaveURL(/confirmation/);\\r\\n\\r\\n  // 4. Continue to form\\r\\n  await page.locator('text=Continue to Intake Form').click();\\r\\n\\r\\n  // 5. Fill all inputs\\r\\n  const inputs = page.locator('input[type=\\\"text\\\"]');\\r\\n  const count = await inputs.count();\\r\\n  for (let i = 0; i < count; i++) {\\r\\n    await inputs.nth(i).fill(`Sample answer ${i + 1}`);\\r\\n  }\\r\\n\\r\\n  // 6. Submit form\\r\\n  await page.locator('text=Submit').click();\\r\\n\\r\\n  // 7. Thank you page\\r\\n  await expect(page).toHaveURL(/thankyou/);\\r\\n\\r\\n  // 8. Verify local orders folder\\r\\n  const ordersPath = './orders';\\r\\n  if (!fs.existsSync(ordersPath)) throw new Error('❌ Orders folder not found');\\r\\n  const files = fs.readdirSync(ordersPath);\\r\\n  if (!files.length) throw new Error('❌ No order files found in orders folder');\\r\\n  console.log('✅ Order saved locally:', files[files.length - 1]);\\r\\n});\\r\\n\"],\"mappings\":\";;AAAA,MAAM;EAAEA,IAAI;EAAEC;AAAO,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACpD,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AACxB,MAAM;EAAEE;AAAO,CAAC,GAAGF,OAAO,CAAC,IAAI,CAAC;AAEhCF,IAAI,CAAC,wBAAwB,EAAE,OAAO;EAAEK;AAAK,CAAC,KAAK;EACjD,MAAMC,OAAO,GAAG,uBAAuB;EACvC,MAAMC,SAAS,GAAG,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,cAAc;;EAEvD;EACA,MAAMJ,IAAI,CAACK,IAAI,CAAC,GAAGJ,OAAO,UAAU,CAAC;EACrC,MAAML,MAAM,CAACI,IAAI,CAAC,CAACM,WAAW,CAAC,UAAU,CAAC;;EAE1C;EACA,MAAMN,IAAI,CAACO,OAAO,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;;EAEpD;EACA,MAAMb,MAAM,CAACI,IAAI,CAAC,CAACU,SAAS,CAAC,cAAc,CAAC;;EAE5C;EACA,MAAMV,IAAI,CAACO,OAAO,CAAC,8BAA8B,CAAC,CAACE,KAAK,CAAC,CAAC;;EAE1D;EACA,MAAME,MAAM,GAAGX,IAAI,CAACO,OAAO,CAAC,oBAAoB,CAAC;EACjD,MAAMK,KAAK,GAAG,MAAMD,MAAM,CAACC,KAAK,CAAC,CAAC;EAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,EAAEC,CAAC,EAAE,EAAE;IAC9B,MAAMF,MAAM,CAACG,GAAG,CAACD,CAAC,CAAC,CAACE,IAAI,CAAC,iBAAiBF,CAAC,GAAG,CAAC,EAAE,CAAC;EACpD;;EAEA;EACA,MAAMb,IAAI,CAACO,OAAO,CAAC,aAAa,CAAC,CAACE,KAAK,CAAC,CAAC;;EAEzC;EACA,MAAMb,MAAM,CAACI,IAAI,CAAC,CAACU,SAAS,CAAC,UAAU,CAAC;;EAExC;EACA,MAAMM,UAAU,GAAG,UAAU;EAC7B,IAAI,CAAClB,EAAE,CAACmB,UAAU,CAACD,UAAU,CAAC,EAAE,MAAM,IAAIE,KAAK,CAAC,2BAA2B,CAAC;EAC5E,MAAMC,KAAK,GAAGrB,EAAE,CAACsB,WAAW,CAACJ,UAAU,CAAC;EACxC,IAAI,CAACG,KAAK,CAACE,MAAM,EAAE,MAAM,IAAIH,KAAK,CAAC,yCAAyC,CAAC;EAC7EI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEJ,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC\",\"ignoreList\":[]}"
  },
  {
    "File": "scripts\\provision-db.js",
    "Line": 1,
    "Text": "const { Client } = require(\"pg\");"
  },
  {
    "File": "scripts\\seed-catalog.js",
    "Line": 1,
    "Text": "const { Client } = require(\"pg\");"
  }
]
