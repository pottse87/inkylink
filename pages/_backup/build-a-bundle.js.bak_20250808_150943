import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";

const isBrowser = () => typeof window !== "undefined";
const getClientId = () => {
  if (!isBrowser()) return null;
  let cid = localStorage.getItem("inkylink_client_id");
  if (!cid) {
    cid = ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
    );
    localStorage.setItem("inkylink_client_id", cid);
  }
  return cid;
};

async function saveCart(client_id, items) {
  const r = await fetch("/api/save-cloud-cart", {
    method: "POST",
    headers: { "content-type": "application/json" },
    body: JSON.stringify({ client_id, items })
  });
  const data = await r.json().catch(() => ({}));
  if (!r.ok) throw new Error(data?.error || "Failed to save cart");
  return data;
}

export default function BuildABundle() {
  const router = useRouter();
  const [clientId, setClientId] = useState(null);
  const [selected, setSelected] = useState({}); // id -> quantity

  useEffect(() => { setClientId(getClientId()); }, []);

  // Example bundle library (use your existing)
  const bundleItems = [
    {
      id: "product description",
      title: "Product Description",
      price: 39,
      description: "Stand out in search with expertly crafted product descriptions.",
      icon: "/icons/desc.png",
      stripeMonthlyId: "price_1RrAiGFjDGmKohCHv5acUOmw",
    },
    {
      id: "product overview",
      title: "Product Overview",
      price: 29,
      description: "Highlight your product in a quick, easy-to-read snapshot.",
      icon: "/icons/overview.png",
      stripeMonthlyId: "price_1RrAkaFjDGmKohCHFah1gFHG",
    },
    {
      id: "welcome email",
      title: "Welcome Email",
      price: 39,
      description: "Make a lasting first impression with a warm, professional welcome.",
      icon: "/icons/welcome.png",
      stripeMonthlyId: "price_1RrAnIFjDGmKohCHAFVQH1Ew",
    },
    {
      id: "product drop email",
      title: "Product Drop Email",
      price: 39,
      description: "Announce your new product with a sharp branded impact.",
      icon: "/icons/drop.png",
      stripeMonthlyId: "price_1RrAnxFjDGmKohCHrqsHz9Z7",
    },
    {
      id: "seo blog post",
      title: "SEO-Optimized Blog Post",
      price: 59,
      description: "A keyword-driven blog built to rank on page one.",
      icon: "/icons/blog.png",
      stripeMonthlyId: "price_1RrAovFjDGmKohCHvLnPKHf8",
    },
    {
      id: "bullet point rewrite",
      title: "Bullet Point Rewrite",
      price: 39,
      description: "Optimize your bullet points high-performance, persuasive language.",
      icon: "/icons/bullet point rewrite.png",
      stripeMonthlyId: "price_1RrAqhFjDGmKohCHBPP4F3i1",
    },
    {
      id: "faq section",
      title: "FAQ Section",
      price: 29,
      description: "Answer buyer questions before they're asked with a customer-focused FAQ.",
      icon: "/icons/faq section.png",
      stripeMonthlyId: "price_1RrArMFjDGmKohCHYT4OISyP",
    },
    {
      id: "comparison table",
      title: "Comparison Table",
      price: 39,
      description: "Make decision-making easy with a side-by-side comparison.",
      icon: "/icons/comparison table.png",
      stripeMonthlyId: "price_1RrAs9FjDGmKohCHEJ4tkmdY",
    },
    {
      id: "seo titles metadata",
      title: "SEO Titles & Metadata",
      price: 39,
      description: "Keyword-smart titles that speak both human and search engine.",
      icon: "/icons/seo.png",
      stripeMonthlyId: "price_1RrAtGFjDGmKohCHvzgeRw3f",
    },
    {
      id: "full site audit",
      title: "Full Site Audit",
      price: 179,
      description: "We'll review your store and provide clear, usable feedback you can apply immediately.",
      icon: "/icons/full site audit.png",
      stripeMonthlyId: "price_1RrAuVFjDGmKohCHzjoZfIQ5",
    },
    {
      id: "launch kit",
      title: "Launch Kit",
      price: 119,
      description: "Everything you need to launch new products with confidence.",
      icon: "/icons/launch kit.png",
      stripeMonthlyId: "price_1RrAyoFjDGmKohCHFlITlQ0H",
    },
    {
      id: "expansion kit",
      title: "Expansion Kit",
      price: 149,
      description: "A smart choice for stores expanding their lineup or revamping old content.",
      icon: "/icons/expansion kit.png",
      stripeMonthlyId: "price_1RrAztFjDGmKohCHYJYF4khr",
    },
    {
      id: "conversion booster",
      title: "Conversion Booster",
      price: 129,
      description: "Revive sluggish listings and amplify your most visited pages.",
      icon: "/icons/conversion booster.png",
      stripeMonthlyId: "price_1RrB2IFjDGmKohCHWVM3XyqB",
    },
  {
    id: "amazon product description",
    title: "Amazon Product Description",
    description: "Optimized for Amazon's algorithm and shopper behavior. Includes SEO-driven copy, brand tone, and strategic formatting.",
    price: 49,
    icon: "/icons/amazon product description.png",
    stripeMonthlyId: "price_1RrB3sFjDGmKohCH96i7R4hi",
  },
  {
    id: "amazon bullet points rewrite",
    title: "Amazon Bullet Points Rewrite",
    description: "High-performance bullet points designed to boost click-through-rate and conversions.",
    price: 39,
    icon: "/icons/amazon bullet point rewrite.png",
    stripeMonthlyId: "price_1RrB4bFjDGmKohCH3pvtcmn9",
  },
  {
    id: "Enhanced Amazon Content",
    title: "Enhanced Amazon Content",
    description: "Strategically crafted narratives built to fit Amazon's visual structure.",
    price: 59,
    icon: "/icons/enhanced amazon content.png",
    stripeMonthlyId: "price_1RrB5kFjDGmKohCHHVGJMjnm",
  },
  {
    id: "split test variants",
    title: "Split Test Variants",
    description: "Run A/B tests with multiple versions of your product's copy to see which converts best. Includes 2 full variants.",
    price: 69,
    icon: "/icons/split test variants.png",
    stripeMonthlyId: "price_1RrBDYFjDGmKohCHE7gydsgB",
  },
  {
    id: "branding voice guidelines",
    title: "Branding Voice Guidelines",
    description: "Define your unique voice, tone, and messaging pillars so all future content aligns with your brand.",
    price: 89,
    icon: "/icons/branding voice guidelines.png",
    stripeMonthlyId: "price_1RrBEBFjDGmKohCHLRhmPioP",
  },
  {
    id: "amazon power pack",
    title: "Amazon Power Pack",
    description: "Amazon-optimized description, bullet points, and A+ content.",
    price: 129,
    icon: "/icons/amazon power pack.png",
    stripeMonthlyId: "price_1RrB6wFjDGmKohCHgHxpeQRN",
    includes: [
      "Amazon Description",
      "Amazon Bullets",
      "A+ Module Copy"
    ],
    color: "#fce4ec",
  },
  {
    id: "store revamp kit",
    title: "Store Revamp Kit",
    description: "Revitalize your store with expert insight and high impact descriptions.",
    price: 199,
    stripeMonthlyId: "price_1RrB88FjDGmKohCHTTZcDy5q",
    icon: "/icons/store revamp kit.png",
    includes: [
      "Full Site Audit",
      "Descriptions",
      "Bullets",
      "SEO Metadata"
    ],
    color: "#fce4ec",
  },
  {
    id: "ongoing optimization",
    title: "Ongoing Optimization",
    description: "Structured to adapt, improve and help scale your goals.",
    price: 149,
    stripeMonthlyId: "price_1RrB9jFjDGmKohCH0yklX14H",
    icon: "/icons/ongoing optimization.png",
    includes: [
      "Product Page Audit",
      "Split Test Variants",
      "SEO Metadata"
    ],
    color: "#fce4ec",
  },
  {
    id: "conversion booster pro",
    title: "Conversion Booster Pro",
    description: "Targeted improvements designed to turn traffic into sales.",
    price: 169,
    stripeMonthlyId: "price_1RrB9jFjDGmKohCH0yklX14H",
    icon: "/icons/conversion booster pro.png",
    includes: [
      "Landing Page Optimization",
      "Comparison Table",
      "Email Campaign"
    ],
    color: "#fce4ec",
  },
];

  const increment = (id) => setSelected(s => ({ ...s, [id]: Math.max(1, (s[id] || 0) + 1) }));
  const decrement = (id) => setSelected(s => {
    const next = Math.max(0, (s[id] || 0) - 1);
    const copy = { ...s };
    if (next <= 0) delete copy[id]; else copy[id] = next;
    return copy;
  });

  const addSelectedToCart = async () => {
    if (!clientId) return;
    // Normalize
    const items = bundleItems
      .filter(it => selected[it.id] > 0)
      .map(it => ({
        id: String(it.id),
        name: it.name ?? it.title ?? "",
        description: it.description ?? "",
        icon: it.icon ?? "",
        quantity: Math.max(1, selected[it.id] || 1)
      }));
    if (items.length === 0) {
      alert("Select at least one item.");
      return;
    }
    await saveCart(clientId, items);
    router.push("/confirmation");
  };

  return (
    <main style={{ maxWidth: 1100, margin: "40px auto", padding: "0 16px", fontFamily: "system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif" }}>
      <h1 style={{ fontSize: 32, marginBottom: 16 }}>Build a Bundle</h1>

      <div style={{ display: "grid", gridTemplateColumns: "repeat(auto-fill, minmax(260px, 1fr))", gap: 16 }}>
        {bundleItems.map((it) => {
          const qty = selected[it.id] || 0;
          return (
            <div key={it.id} style={{ border: "1px solid #eee", borderRadius: 12, padding: 16 }}>
              <div style={{ display: "flex", alignItems: "center", gap: 8 }}>
                {it.icon ? <img src={it.icon} alt="" width={28} height={28} /> : <div style={{ width: 28, height: 28, background: "#eee", borderRadius: 6 }} />}
                <strong>{it.name}</strong>
              </div>
              <p style={{ color: "#555" }}>{it.description}</p>

              <div style={{ display: "flex", alignItems: "center", gap: 8 }}>
                <button onClick={() => decrement(it.id)} style={{ width: 34, height: 34, borderRadius: 8, border: "1px solid #ddd", background: "#fff" }}>-</button>
                <div style={{ minWidth: 28, textAlign: "center" }}>{qty}</div>
                <button onClick={() => increment(it.id)} style={{ width: 34, height: 34, borderRadius: 8, border: "1px solid #ddd", background: "#fff" }}>+</button>
              </div>
            </div>
          );
        })}
      </div>

      <div style={{ marginTop: 18, display: "flex", justifyContent: "flex-end" }}>
        <button onClick={addSelectedToCart} style={{ padding: "10px 14px", borderRadius: 10, border: "1px solid #ddd", background: "#fff", cursor: "pointer" }}>
          Add Selected & Review
        </button>
      </div>
    </main>
  );
}
